name: Deploy to Dev
on:
  push:
    branches:
    - develop

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: deepakputhraya/action-branch-name@master
        with:
          regex: '([a-z])+\/([a-z])+' # Regex the branch should match. This example enforces grouping
          allowed_prefixes: 'feature,bug,fix' # All branches should start with the given prefix
          ignore: master,develop # Ignore exactly matching branch names from convention
          min_length: 5 # Min length of the branch name
          max_length: 100 # Max length of the branch name

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Git Semantic Version
        id: versioning
        # You may pin to the exact commit or the version.
        # uses: PaulHatch/semantic-version@3d2ea28b25c9a892b07cd24b5675300b701fcef5
        uses: PaulHatch/semantic-version@v4.0.3
        with:
          # The prefix to use to identify tags
          tag_prefix: "v" 
          # A string which, if present in a git commit, indicates that a change represents a major (breaking) change. Wrap with '/' to match using a regular expression.
          major_pattern: "BREAKING CHANGE:" 
          # A string which, if present in a git commit, indicates that a change represents a minor (feature) change. Wrap with '/' to match using a regular expression.
          minor_pattern: "feat:"
          # Pattern to use when formatting output version
          format: "v${major}.${minor}.${patch}-rc${increment}"
      
      - name: Make gradlew executeable
        run: chmod +x gradlew

      - name: Set up JDK 14
        uses: actions/setup-java@v2
        with:
          java-version: '14'
          distribution: 'adopt-hotspot'
      - name: Jar
        uses: gradle/gradle-build-action@v2
        with:
          arguments: shadowJar -PprojVersion=${{ steps.versioning.outputs.version}}

      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_DEV_PRIVATE_KEY }} 
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
          
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_DEV_HOST }} >> ~/.ssh/known_hosts
        
      - name: Rsync new version of files
        run: rsync */build/libs/*-all.jar ${{ secrets.SSH_DEV_USER }}:~/KageCloudUpdates/
        
      - name: SSH into dev and Update plugins
        run: ssh ${{ secrets.SSH_DEV_USER }} < scripts/updateAdventurePlugin

      - name: Nexus Repo Publish Core
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://repo.syscy.de/
          username: syscy-githubAction-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: maven2
          repository: maven-snapshots
          coordinates: groupId=de.syscy artifactId=kagecloud-core version=${{steps.versioning.outputs.version}}
          assets: extension=jar
          filename: core/build/libs/core-${{steps.versioning.outputs.version}}-all.jar
      
      - name: Nexus Repo Publish Core
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://repo.syscy.de/
          username: syscy-githubAction-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: maven2
          repository: maven-snapshots
          coordinates: groupId=de.syscy artifactId=kagecloud-wrapper version=${{steps.versioning.outputs.version}}
          assets: extension=jar
          filename: wrapper/build/libs/wrapper-${{steps.versioning.outputs.version}}-all.jar

      - name: Nexus Repo Publish Core
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://repo.syscy.de/
          username: syscy-githubAction-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: maven2
          repository: maven-snapshots
          coordinates: groupId=de.syscy artifactId=kagecloud-plugin version=${{steps.versioning.outputs.version}}
          assets: extension=jar
          filename: plugin/build/libs/plugin-${{steps.versioning.outputs.version}}-all.jar

      - name: Nexus Repo Publish Core
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://repo.syscy.de/
          username: syscy-githubAction-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: maven2
          repository: maven-snapshots
          coordinates: groupId=de.syscy artifactId=kagecloud-velocity version=${{steps.versioning.outputs.version}}
          assets: extension=jar
          filename: velocity/build/libs/velocity-${{steps.versioning.outputs.version}}-all.jar

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        with:
          configuration: "workflow_configs/changelog_configuration_dev.json"
          # Defines the owner of the repository to create the changelog for
          owner: RaidRun
          # Defines the token to use to execute the git API requests with, uses `env.GITHUB_TOKEN` by default
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        # You may pin to the exact commit or the version.
        # uses: ncipollo/release-action@40bb172bd05f266cf9ba4ff965cb61e9ee5f6d01
        uses: ncipollo/release-action@v1.9.0
        with:
          # An optional name for the release. If this is omitted the tag will be used.
          name: ${{ steps.versioning.outputs.version}} 
          prerelease: true
          generateReleaseNotes: false
          body: ${{steps.build_changelog.outputs.changelog}}
          tag: ${{ steps.versioning.outputs.version}}
          # The Github token.
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "*/build/libs/*-all.jar"
        

